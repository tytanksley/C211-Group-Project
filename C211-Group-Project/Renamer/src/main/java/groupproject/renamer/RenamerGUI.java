/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



package groupproject.renamer;

import java.io.File;
import java.nio.file.Path;
import static java.nio.file.StandardCopyOption.*;
import java.util.ArrayList;
/**
 *
 * @author home
 */
public class RenamerGUI extends javax.swing.JFrame {

    /**
     * Creates new form RenamerGUI
     */
    public RenamerGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DirectoryDisplay = new javax.swing.JScrollPane();
        AreaDirectoryDisplay = new javax.swing.JTextArea();
        NewDirectoryDisplay = new javax.swing.JScrollPane();
        AreaNewDirectory = new javax.swing.JTextArea();
        ButtonRename = new javax.swing.JRadioButton();
        ButtonMove = new javax.swing.JRadioButton();
        LabelContains = new javax.swing.JLabel();
        LabelStartsWith = new javax.swing.JLabel();
        LabelEndsWith = new javax.swing.JLabel();
        FieldContains = new javax.swing.JTextField();
        FieldStartsWith = new javax.swing.JTextField();
        FieldEndsWith = new javax.swing.JTextField();
        FieldDirectory = new javax.swing.JTextField();
        LabelDirectory = new javax.swing.JLabel();
        LabelTargetDirectory = new javax.swing.JLabel();
        FieldTargetDirectory = new javax.swing.JTextField();
        LabelAction = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaInstructions = new javax.swing.JTextArea();
        LabelDirectoryContents = new javax.swing.JLabel();
        LabelChanges = new javax.swing.JLabel();
        ButtonTest = new javax.swing.JButton();
        ButtonStart = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        AreaOutputMessage = new javax.swing.JTextArea();
        LabelFilename = new javax.swing.JLabel();
        FieldFilename = new javax.swing.JTextField();
        LabelNewName = new javax.swing.JLabel();
        FieldNewName = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AreaDirectoryDisplay.setColumns(20);
        AreaDirectoryDisplay.setRows(5);
        AreaDirectoryDisplay.setText(directoryContentsToString());
        DirectoryDisplay.setViewportView(AreaDirectoryDisplay);

        AreaNewDirectory.setColumns(20);
        AreaNewDirectory.setRows(5);
        AreaNewDirectory.setText("[display changes to be made here]");
        NewDirectoryDisplay.setViewportView(AreaNewDirectory);

        ButtonRename.setText("Rename");

        ButtonMove.setText("Move");

        LabelContains.setText("Contains");

        LabelStartsWith.setText("Starts with");

        LabelEndsWith.setText("Ends with");

        FieldContains.setText("[Contains]");
        FieldContains.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldContainsActionPerformed(evt);
            }
        });

        FieldStartsWith.setText("[Starts with]");

        FieldEndsWith.setText("[Ends with]");

        FieldDirectory.setText(getCurrentDirectory());

        LabelDirectory.setText("Directory");

        LabelTargetDirectory.setText("Target Directory");

        FieldTargetDirectory.setText("[Target Directory]");

        LabelAction.setText("Action");

        AreaInstructions.setColumns(20);
        AreaInstructions.setRows(5);
        AreaInstructions.setText("[Instructions]");
        jScrollPane1.setViewportView(AreaInstructions);

        LabelDirectoryContents.setText("Directory Contents");

        LabelChanges.setText("Changes to be made");

        ButtonTest.setText("Test");
        ButtonTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTestActionPerformed(evt);
            }
        });

        ButtonStart.setText("Start");
        ButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonStartActionPerformed(evt);
            }
        });

        AreaOutputMessage.setColumns(20);
        AreaOutputMessage.setRows(5);
        AreaOutputMessage.setText("[Output messages/exceptions here]");
        jScrollPane2.setViewportView(AreaOutputMessage);

        LabelFilename.setText("Filename");

        FieldFilename.setText("[Filename]");

        LabelNewName.setText("New Name");

        FieldNewName.setText("[New Name]");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FieldDirectory)
                            .addComponent(jScrollPane1)
                            .addComponent(FieldTargetDirectory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(LabelDirectory)
                                .addGap(267, 267, 267))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ButtonMove)
                                    .addComponent(LabelDirectoryContents)
                                    .addComponent(DirectoryDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LabelAction)
                                    .addComponent(ButtonRename))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelNewName)
                            .addComponent(LabelTargetDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(FieldNewName, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(FieldFilename, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(LabelContains)
                                        .addGap(18, 18, 18)
                                        .addComponent(FieldContains))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(LabelStartsWith)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FieldStartsWith, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE))
                                    .addComponent(LabelFilename)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(LabelEndsWith)
                                        .addGap(21, 21, 21)
                                        .addComponent(FieldEndsWith))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(LabelChanges)
                                        .addGap(18, 18, 18)
                                        .addComponent(ButtonTest)
                                        .addGap(18, 18, 18)
                                        .addComponent(ButtonStart))))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addComponent(NewDirectoryDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelDirectory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelFilename)
                            .addComponent(FieldFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelContains)
                            .addComponent(FieldContains, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FieldStartsWith, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelStartsWith))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FieldEndsWith, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelEndsWith))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelChanges)
                            .addComponent(ButtonTest)
                            .addComponent(ButtonStart))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(FieldDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(LabelAction)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonRename)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonMove)
                        .addGap(18, 18, 18)
                        .addComponent(LabelNewName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FieldNewName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelTargetDirectory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FieldTargetDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 21, Short.MAX_VALUE)))
                .addComponent(LabelDirectoryContents)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NewDirectoryDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                    .addComponent(DirectoryDisplay))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FieldContainsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldContainsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldContainsActionPerformed

    private void ButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonStartActionPerformed
        // TODO add your handling code here:
           if(!ButtonRename.isSelected() && !ButtonMove.isSelected())
        AreaOutputMessage.setText("No actions have been selected!\nPlease select 'Move' or 'Rename'");
    else
    {
        startButton();
    }
    }//GEN-LAST:event_ButtonStartActionPerformed

    private void ButtonTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonTestActionPerformed
       if(!ButtonRename.isSelected() && !ButtonMove.isSelected())
        AreaOutputMessage.setText("No actions have been selected!\nPlease select 'Move' or 'Rename'");
    else
    {
        testButton();
    }
    }//GEN-LAST:event_ButtonTestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RenamerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RenamerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RenamerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RenamerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RenamerGUI().setVisible(true);
            }
        });
    }

    // Find current directory
    String getCurrentDirectory() {
      String path = System.getProperty("user.dir");
      
      System.out.println("Working Directory = " + path);
      return path;
    }
    
    // List files in directory
    
    File[] getDirectoryContents(){
       File currentDirectory = new File(getCurrentDirectory());
    File[] directoryContents = currentDirectory.listFiles(); 
   try {
      for(File file : directoryContents) {
        if(file.isFile()) {
          System.out.println(file);
      }
      }
    } catch (Exception e) {
      e.getStackTrace();
    }
     return directoryContents;  
    }
    
    // list contents of directory as String with line breaks after each file
    public String directoryContentsToString(){
        String files = "";
        for(File file: getDirectoryContents()){
            files += file.getName() + "\n";
        }
        
        return files;
    }
    
    // renameFile() tested, seems to work
        // need to figure out how to take an arraylist from text area and loop over a list of files from user input
    public void renameFile()
    {
        // get old and new filenames from text areas
        File targetFile = new File(FieldNewName.getText());
        File originalFile = new File(FieldFilename.getText());
         
     // rename file
        if(originalFile.renameTo(targetFile))
         {  
        // display changes made
         String outputMessage = originalFile.toString() +  " changed to " + targetFile.toString();
         AreaOutputMessage.setText(outputMessage);
        // refresh list of files in directory after renaming
         AreaDirectoryDisplay.setText(directoryContentsToString());
        }
    
    }
    
    // display changes to be made made by renameFile()
    public void testRename()
    {
        File targetFile = new File(FieldNewName.getText());
        File originalFile = new File(FieldFilename.getText());
        
        AreaNewDirectory.setText(originalFile.toString() + " --> " + targetFile.toString());
    }
    
    
    // having trouble with the path seperator
    public void moveFile()
    {
        String fileSep = File.separator;
        File originalFile = new File(FieldFilename.getText());
        String targetFileName = "";
        
  
        // determine if file to be moved will also be renamed
        if(ButtonRename.isSelected())
         targetFileName =  FieldTargetDirectory.getText() + fileSep + FieldNewName.getText();
        if(!ButtonRename.isSelected())
         targetFileName = FieldTargetDirectory.getText() + fileSep + FieldFilename.getText();
        
        // create target file with new name or original
        File targetFile = new File(targetFileName);
  
        
        if(originalFile.renameTo(targetFile))
        {
            String outputMessage = originalFile.toString() +  " moved to " + targetFile.toString();
            AreaOutputMessage.setText(outputMessage);
            // refresh list of files in directory after renaming
            AreaDirectoryDisplay.setText(directoryContentsToString());
            // delete original file
            originalFile.delete();
        }
        
    }
    
    public void testMove()
    {
     //   File originalFile = new File(FieldFilename.getText());
     //   File targetFile = new File(FieldTargetDirectory.getText());
       String fileSep = File.separator;
        
         File originalFile = new File(FieldFilename.getText());
        String targetFileName = "";
                // determine if file to be moved will also be renamed
        if(ButtonRename.isSelected())
         targetFileName =  FieldTargetDirectory.getText() + fileSep + FieldNewName.getText();
        if(!ButtonRename.isSelected())
         targetFileName = FieldTargetDirectory.getText() + fileSep + FieldFilename.getText();
        
        // create target file with new name or original
        File targetFile = new File(targetFileName);
  
        AreaNewDirectory.setText(originalFile.toString() + " --> " + targetFile.toString());
    }
    
    
    // test button
    public void testButton()
    {
        if(ButtonRename.isSelected())
            testRename();
        if(ButtonMove.isSelected())
            testMove();
    }
    
    // start button
    public void startButton()
    {
    // check to see if an action is selected
 
    // if 'rename' button is selected, rename file
        if(ButtonRename.isSelected())
            renameFile();
        if(ButtonMove.isSelected())
            moveFile();
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaDirectoryDisplay;
    private javax.swing.JTextArea AreaInstructions;
    private javax.swing.JTextArea AreaNewDirectory;
    private javax.swing.JTextArea AreaOutputMessage;
    private javax.swing.JRadioButton ButtonMove;
    private javax.swing.JRadioButton ButtonRename;
    private javax.swing.JButton ButtonStart;
    private javax.swing.JButton ButtonTest;
    private javax.swing.JScrollPane DirectoryDisplay;
    private javax.swing.JTextField FieldContains;
    private javax.swing.JTextField FieldDirectory;
    private javax.swing.JTextField FieldEndsWith;
    private javax.swing.JTextField FieldFilename;
    private javax.swing.JTextField FieldNewName;
    private javax.swing.JTextField FieldStartsWith;
    private javax.swing.JTextField FieldTargetDirectory;
    private javax.swing.JLabel LabelAction;
    private javax.swing.JLabel LabelChanges;
    private javax.swing.JLabel LabelContains;
    private javax.swing.JLabel LabelDirectory;
    private javax.swing.JLabel LabelDirectoryContents;
    private javax.swing.JLabel LabelEndsWith;
    private javax.swing.JLabel LabelFilename;
    private javax.swing.JLabel LabelNewName;
    private javax.swing.JLabel LabelStartsWith;
    private javax.swing.JLabel LabelTargetDirectory;
    private javax.swing.JScrollPane NewDirectoryDisplay;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
